/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:348254:
  appc.background(230);
} //_CODE_:window1:348254:

public void number_of_humans_slider(GSlider source, GEvent event) { //_CODE_:Number_of_humans:538040:
  println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:Number_of_humans:538040:

public void recovery_strength_slider(GSlider source, GEvent event) { //_CODE_:human_recovery_strength:724093:
  println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:human_recovery_strength:724093:

public void infection_rate_slider(GSlider source, GEvent event) { //_CODE_:infection_rate_slide:937367:
  println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:infection_rate_slide:937367:

public void virus_strength_sldier(GSlider source, GEvent event) { //_CODE_:virus_strength:952021:
  println("virus_strength - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:virus_strength:952021:

public void virus_lethality_slider(GSlider source, GEvent event) { //_CODE_:virus_lethality:459906:
  println("slider3 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:virus_lethality:459906:

public void restart_sim_button(GButton source, GEvent event) { //_CODE_:Sim_Restart:558488:
  println("Sim_Restart - GButton >> GEvent." + event + " @ " + millis());
  init();
} //_CODE_:Sim_Restart:558488:

public void min_age_target_virus(GSlider source, GEvent event) { //_CODE_:min_age_target:737985:
  println("min_age_target - GSlider >> GEvent." + event + " @ " + millis());
  min = source.getValueI();
} //_CODE_:min_age_target:737985:

public void max_age_target_virus(GSlider source, GEvent event) { //_CODE_:max_age_target:692700:
  println("max_age_target - GSlider >> GEvent." + event + " @ " + millis());
  max = source.getValueI();
} //_CODE_:max_age_target:692700:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Settings", 0, 0, 450, 300, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  Number_of_humans = new GSlider(window1, 0, 160, 110, 50, 10.0);
  Number_of_humans.setShowValue(true);
  Number_of_humans.setShowLimits(true);
  Number_of_humans.setLimits(20, 5, 200);
  Number_of_humans.setShowTicks(true);
  Number_of_humans.setNumberFormat(G4P.INTEGER, 0);
  Number_of_humans.setOpaque(false);
  Number_of_humans.addEventHandler(this, "number_of_humans_slider");
  label2 = new GLabel(window1, 0, 130, 110, 30);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Number of humans");
  label2.setOpaque(false);
  label1 = new GLabel(window1, 0, 0, 100, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Human settings");
  label1.setOpaque(false);
  human_recovery_strength = new GSlider(window1, 0, 60, 110, 50, 10.0);
  human_recovery_strength.setShowValue(true);
  human_recovery_strength.setShowLimits(true);
  human_recovery_strength.setLimits(5.0, 1.0, 10.0);
  human_recovery_strength.setShowTicks(true);
  human_recovery_strength.setNumberFormat(G4P.DECIMAL, 0);
  human_recovery_strength.setOpaque(false);
  human_recovery_strength.addEventHandler(this, "recovery_strength_slider");
  label3 = new GLabel(window1, 0, 30, 100, 30);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Recovery strength");
  label3.setOpaque(false);
  label7 = new GLabel(window1, 160, 0, 100, 20);
  label7.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label7.setText("Virus settings");
  label7.setOpaque(false);
  label4 = new GLabel(window1, 160, 30, 120, 30);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Infection rate");
  label4.setOpaque(false);
  label5 = new GLabel(window1, 160, 110, 120, 30);
  label5.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label5.setText("Virus strength");
  label5.setOpaque(false);
  label6 = new GLabel(window1, 160, 190, 120, 30);
  label6.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label6.setText("Lethality");
  label6.setOpaque(false);
  infection_rate_slide = new GSlider(window1, 160, 60, 120, 50, 10.0);
  infection_rate_slide.setShowValue(true);
  infection_rate_slide.setShowLimits(true);
  infection_rate_slide.setLimits(20, 10, 40);
  infection_rate_slide.setShowTicks(true);
  infection_rate_slide.setNumberFormat(G4P.INTEGER, 0);
  infection_rate_slide.setOpaque(false);
  infection_rate_slide.addEventHandler(this, "infection_rate_slider");
  virus_strength = new GSlider(window1, 160, 140, 120, 50, 10.0);
  virus_strength.setShowValue(true);
  virus_strength.setShowLimits(true);
  virus_strength.setLimits(0.3, 0.0, 1.0);
  virus_strength.setShowTicks(true);
  virus_strength.setNumberFormat(G4P.DECIMAL, 2);
  virus_strength.setOpaque(false);
  virus_strength.addEventHandler(this, "virus_strength_sldier");
  virus_lethality = new GSlider(window1, 160, 220, 120, 50, 10.0);
  virus_lethality.setShowValue(true);
  virus_lethality.setShowLimits(true);
  virus_lethality.setLimits(0.01, 0.0, 0.1);
  virus_lethality.setShowTicks(true);
  virus_lethality.setNumberFormat(G4P.DECIMAL, 2);
  virus_lethality.setOpaque(false);
  virus_lethality.addEventHandler(this, "virus_lethality_slider");
  Sim_Restart = new GButton(window1, 0, 270, 80, 30);
  Sim_Restart.setText("RESTART");
  Sim_Restart.addEventHandler(this, "restart_sim_button");
  label8 = new GLabel(window1, 320, 0, 109, 16);
  label8.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label8.setText("Change age target");
  label8.setOpaque(false);
  min_age_target = new GSlider(window1, 320, 60, 121, 47, 10.0);
  min_age_target.setShowValue(true);
  min_age_target.setShowLimits(true);
  min_age_target.setLimits(10, 1, 85);
  min_age_target.setShowTicks(true);
  min_age_target.setNumberFormat(G4P.INTEGER, 0);
  min_age_target.setOpaque(false);
  min_age_target.addEventHandler(this, "min_age_target_virus");
  max_age_target = new GSlider(window1, 320, 140, 120, 47, 10.0);
  max_age_target.setShowValue(true);
  max_age_target.setShowLimits(true);
  max_age_target.setLimits(20, 1, 85);
  max_age_target.setShowTicks(true);
  max_age_target.setNumberFormat(G4P.INTEGER, 0);
  max_age_target.setOpaque(false);
  max_age_target.addEventHandler(this, "max_age_target_virus");
  label9 = new GLabel(window1, 320, 30, 90, 30);
  label9.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label9.setText("Min age");
  label9.setOpaque(false);
  label10 = new GLabel(window1, 320, 110, 90, 30);
  label10.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label10.setText("Max age");
  label10.setOpaque(false);
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GSlider Number_of_humans; 
GLabel label2; 
GLabel label1; 
GSlider human_recovery_strength; 
GLabel label3; 
GLabel label7; 
GLabel label4; 
GLabel label5; 
GLabel label6; 
GSlider infection_rate_slide; 
GSlider virus_strength; 
GSlider virus_lethality; 
GButton Sim_Restart; 
GLabel label8; 
GSlider min_age_target; 
GSlider max_age_target; 
GLabel label9; 
GLabel label10; 
